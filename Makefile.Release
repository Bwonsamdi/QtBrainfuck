#############################################################################
# Makefile for building: brainfuck
# Generated by qmake (2.01a) (Qt 4.8.5) on: ?? 4? 3 08:10:39 2020
# Project:  brainfuck.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_DLL -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_HAVE_MMX -DQT_HAVE_3DNOW -DQT_HAVE_SSE -DQT_HAVE_MMXEXT -DQT_HAVE_SSE2 -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -pipe -O2 -Wall -Wextra $(DEFINES)
CXXFLAGS      = -pipe -O2 -frtti -fexceptions -mthreads -Wall -Wextra $(DEFINES)
INCPATH       = -I"..\..\..\Qt\4.8.5\include\QtCore" -I"..\..\..\Qt\4.8.5\include\QtGui" -I"..\..\..\Qt\4.8.5\include" -I"..\..\..\Qt\4.8.5\include\ActiveQt" -I"release" -I"." -I"..\..\..\Qt\4.8.5\mkspecs\default"
LINK        =        g++
LFLAGS        =        -Wl,-s -mthreads -Wl,-subsystem,windows
LIBS        =        -L"d:\Qt\4.8.5\lib" -lmingw32 -lqtmain -lQtGui4 -lQtCore4 
QMAKE         = d:\Qt\4.8.5\bin\qmake.exe
IDC           = d:\Qt\4.8.5\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
SED           = 
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		Brainfuck.cpp \
		Debugger.cpp \
		graphwidget.cpp release\moc_mainwindow.cpp \
		release\moc_graphwidget.cpp \
		release\qrc_icon.cpp
OBJECTS       = release/main.o \
		release/mainwindow.o \
		release/Brainfuck.o \
		release/Debugger.o \
		release/graphwidget.o \
		release/moc_mainwindow.o \
		release/moc_graphwidget.o \
		release/qrc_icon.o
DIST          = 
QMAKE_TARGET  = brainfuck
DESTDIR        = release\ #avoid trailing-slash linebreak
TARGET         = brainfuck.exe
DESTDIR_TARGET = release\brainfuck.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_mainwindow.h $(OBJECTS) 
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) $(OBJECTS)  $(LIBS)

qmake:  FORCE
	@$(QMAKE) -o Makefile.Release brainfuck.pro

dist:
	$(ZIP) brainfuck.zip $(SOURCES) $(DIST) brainfuck.pro ..\..\..\Qt\4.8.5\mkspecs\features\device_config.prf ..\..\..\Qt\4.8.5\mkspecs\qconfig.pri ..\..\..\Qt\4.8.5\mkspecs\modules\qt_webkit_version.pri ..\..\..\Qt\4.8.5\mkspecs\features\qt_functions.prf ..\..\..\Qt\4.8.5\mkspecs\features\qt_config.prf ..\..\..\Qt\4.8.5\mkspecs\win32-g++\qmake.conf ..\..\..\Qt\4.8.5\mkspecs\features\exclusive_builds.prf ..\..\..\Qt\4.8.5\mkspecs\features\default_pre.prf ..\..\..\Qt\4.8.5\mkspecs\features\win32\default_pre.prf ..\..\..\Qt\4.8.5\mkspecs\features\release.prf ..\..\..\Qt\4.8.5\mkspecs\features\debug_and_release.prf ..\..\..\Qt\4.8.5\mkspecs\features\default_post.prf ..\..\..\Qt\4.8.5\mkspecs\features\win32\default_post.prf ..\..\..\Qt\4.8.5\mkspecs\features\build_pass.prf ..\..\..\Qt\4.8.5\mkspecs\features\win32\rtti.prf ..\..\..\Qt\4.8.5\mkspecs\features\win32\exceptions.prf ..\..\..\Qt\4.8.5\mkspecs\features\win32\stl.prf ..\..\..\Qt\4.8.5\mkspecs\features\shared.prf ..\..\..\Qt\4.8.5\mkspecs\features\warn_on.prf ..\..\..\Qt\4.8.5\mkspecs\features\qt.prf ..\..\..\Qt\4.8.5\mkspecs\features\win32\thread.prf ..\..\..\Qt\4.8.5\mkspecs\features\moc.prf ..\..\..\Qt\4.8.5\mkspecs\features\win32\windows.prf ..\..\..\Qt\4.8.5\mkspecs\features\resources.prf ..\..\..\Qt\4.8.5\mkspecs\features\uic.prf ..\..\..\Qt\4.8.5\mkspecs\features\yacc.prf ..\..\..\Qt\4.8.5\mkspecs\features\lex.prf ..\..\..\Qt\4.8.5\mkspecs\features\include_source_dir.prf d:\Qt\4.8.5\lib\qtmain.prl  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release\main.o release\mainwindow.o release\Brainfuck.o release\Debugger.o release\graphwidget.o release\moc_mainwindow.o release\moc_graphwidget.o release\qrc_icon.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_mainwindow.cpp release/moc_graphwidget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release\moc_mainwindow.cpp release\moc_graphwidget.cpp
release/moc_mainwindow.cpp: Debugger.h \
		Brainfuck.h \
		graphwidget.h \
		mainwindow.h
	D:\Qt\4.8.5\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 mainwindow.h -o release\moc_mainwindow.cpp

release/moc_graphwidget.cpp: Brainfuck.h \
		graphwidget.h
	D:\Qt\4.8.5\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 graphwidget.h -o release\moc_graphwidget.cpp

compiler_rcc_make_all: release/qrc_icon.cpp
compiler_rcc_clean:
	-$(DEL_FILE) release\qrc_icon.cpp
release/qrc_icon.cpp: icon.qrc \
		icons/bangzhu.png \
		icons/duizhantu.png \
		icons/jiancha.png \
		icons/jieshu.png \
		icons/geshishua.png \
		icons/guanyu.png \
		icons/step-into.png \
		icons/xinjian.png \
		icons/dakai.png \
		icons/reload.png \
		icons/step-out.png \
		icons/tuichu.png \
		icons/step-over.png \
		icons/xianshi.png \
		icons/debug.png \
		icons/baocun.png
	d:\Qt\4.8.5\bin\rcc.exe -name icon icon.qrc -o release\qrc_icon.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: mainwindow.ui
	d:\Qt\4.8.5\bin\uic.exe mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 



####### Compile

release/main.o: main.cpp mainwindow.h \
		Debugger.h \
		Brainfuck.h \
		graphwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\main.o main.cpp

release/mainwindow.o: mainwindow.cpp mainwindow.h \
		Debugger.h \
		Brainfuck.h \
		graphwidget.h \
		ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\mainwindow.o mainwindow.cpp

release/Brainfuck.o: Brainfuck.cpp Brainfuck.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Brainfuck.o Brainfuck.cpp

release/Debugger.o: Debugger.cpp Debugger.h \
		Brainfuck.h \
		mainwindow.h \
		graphwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\Debugger.o Debugger.cpp

release/graphwidget.o: graphwidget.cpp graphwidget.h \
		Brainfuck.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\graphwidget.o graphwidget.cpp

release/moc_mainwindow.o: release/moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_mainwindow.o release\moc_mainwindow.cpp

release/moc_graphwidget.o: release/moc_graphwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\moc_graphwidget.o release\moc_graphwidget.cpp

release/qrc_icon.o: release/qrc_icon.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release\qrc_icon.o release\qrc_icon.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

